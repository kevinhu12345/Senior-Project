@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index">Profile</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a asp-page="./ChangePassword">Password</a></li>
    @if (UserManager.GetUserAsync(User).Result.AccountType != 0)
    {
        <li class="@ManageNavPages.ManageVenuesClass(ViewContext)"><a asp-page="./ManageVenues">Manage Locations</a></li>
        <li class="@ManageNavPages.ManageRSVPsClass(ViewContext)"><a asp-page="./ManageRSVPs">Manage RSVPs</a></li>
        <li class="@ManageNavPages.ManageEventsClass(ViewContext)"><a asp-page="./ManageEvents">Manage Events</a></li>
        <li class="@ManageNavPages.ManageReviewsClass(ViewContext)"><a asp-page="./ManageReviews">Manage Reviews</a></li>
    }
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a asp-page="./ExternalLogins">External logins</a></li>
    }
</ul>

