@page
@model Tracking_Events.Pages.Reviews.IndexModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Reviews";
}

<h2>@ViewData["Title"]</h2>

<form asp-page="./Index" method="get" asp-route-sortOrder="@Model.CurrentSort">
    <p>
        Filter by <b style="color:red">Venue Name</b> or <b style="color:red">Rating</b>:
        <input type="text" name="searchString" />
        <input type="submit" value="Filter" class="btn btn-info btn-sm" /> |
        <a asp-page="./Index">Back to full list</a>
    </p>
</form>
<table class="table table-striped table-hover">
    <thead>
        <tr class="info">
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.VenueSort" asp-route-searchString="@Model.CurrentSearch">
                    @Html.DisplayNameFor(model => model.Reviews[0].Venue.VenueName)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reviews[0].Event.EventName)
            </th>
            <th>
                Reviewer
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.RatingSort" asp-route-searchString="@Model.CurrentSearch">
                    @Html.DisplayNameFor(model => model.Reviews[0].Rating)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Reviews)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Venue.VenueName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Event.EventName)
                </td>
                <td>
                    @item.User.FirstName @item.User.LastName
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        @if (UserManager.GetUserAsync(User).Result.AccountType == 2 && UserManager.GetUserAsync(User).Result.Id == item.User.Id || UserManager.GetUserAsync(User).Result.AccountType == 0)
                        {
                            <a asp-page="./Delete" asp-route-eventId="@item.EventID" asp-route-venueId="@item.VenueID" asp-route-userId="@item.UserID">Delete</a>
                            <span> | </span>
                        }
                    }
                    <a asp-page="./Details" asp-route-eventId="@item.EventID" asp-route-venueId="@item.VenueID" asp-route-userId="@item.UserID">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
