@page
@model Tracking_Events.Pages.Requests.IndexModel
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Event Requests";
    string Zone;

    try
    {
        Zone = UserManager.GetUserAsync(User).Result.TimeZone;
    }
    catch
    {
        Zone = null;
    }
}

<h2>@ViewData["Title"]</h2>

<table class="table table-striped table-hover">
    <thead>
        <tr class="info">
            <th>
                @Html.DisplayNameFor(model => model.Requests[0].Venue.VenueName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests[0].EventName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests[0].AgeRequirement)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests[0].StartTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests[0].EndTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests[0].Capacity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests[0].Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Requests)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Venue.VenueName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EventName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AgeRequirement)
                </td>
                <td>
                    @TimeZoneInfo.ConvertTimeFromUtc(item.StartTime, TimeZoneInfo.FindSystemTimeZoneById(Zone != null ? Zone : "UTC")).ToString("g")
                </td>
                <td>
                    @TimeZoneInfo.ConvertTimeFromUtc(item.EndTime, TimeZoneInfo.FindSystemTimeZoneById(Zone != null ? Zone : "UTC")).ToString("g")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Capacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @if (UserManager.GetUserAsync(User).Result.AccountType == 0)
                    {
                        <form method="post">
                            <button type="submit" class="btn btn-link btn-xs" asp-route-id="@item.RequestID" asp-route-judgement="Approve">Approve</button> |
                            <button type="submit" class="btn btn-link btn-xs" asp-route-id="@item.RequestID" asp-route-judgement="Reject">Reject</button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
